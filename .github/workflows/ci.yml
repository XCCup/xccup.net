name: XCCup CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - name: 👀 Checkout repo
        uses: actions/checkout@v3

      - name: 🕸 Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: 🖥 Install backend
        run: chmod -R 777 . && docker-compose -f docker-compose-ci.yml run --rm yarn install
        working-directory: ./server

      - name: 🧪 Test backend
        run: docker-compose -f docker-compose-ci.yml run --rm yarn test
        working-directory: ./server

      - name: 🕵️ Add secrets to ENV
        run: echo "METAR_API_KEY=${{ secrets.METAR_API_KEY }}" >> ./.env.ci
        working-directory: ./server

      - name: 🐳 Start Docker Backend Environment
        run: docker-compose -f docker-compose-ci.yml --env-file ./.env.ci up -d
        working-directory: ./server

      - name: 📝 List all databases (just for debugging)
        run: sleep 10 && docker exec db psql -U xccup_user -l

      - name: 🛠 Setup DB (enable PostGIS and set correct timezone)
        run: docker exec db psql -U xccup_user xccup_db -c "set timezone='Europe/Berlin'"
        working-directory: ./server

      - name: 💻 Install and build frontend
        run: docker-compose run --rm yarn install && docker-compose run --rm yarn build-local
        working-directory: ./client

      - name: 🖨 Print current server log before testing (just for debugging)
        run: docker logs server

      #- name: ☑️ Check for "it.only" in test files
      # working-directory: ./client/cypress/e2e
      # Grep will exit with 1 if no matching line in any file was found
      # Therefore we will invert the result of grep
      # Exit codes !0 will fail the whole workflow
      #run: (! grep -r "it.only" .)

      - name: 🩹 Remove tsconfig.json from ./client # or cypress will fail… TODO: Why 🤷‍♂️
        working-directory: ./client
        run: rm tsconfig.json

      - name: 🧪 Install cypress
        run: npx cypress install
      # TODO: Fix cypress caching issue and remove the addional install

      - name: 🏃‍♀️ Cypress run
        uses: cypress-io/github-action@v4
        with:
          start: docker-compose run --service-ports --rm client serve
          wait-on: http://localhost:4173
          working-directory: ./client
          config: baseUrl=http://localhost:4173
          browser: chrome
          #          env: TZ=Europe/Berlin
          env: ELECTRON_ENABLE_LOGGING=true

      - name: 😩 Store artefacts of test failures
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: ./client/cypress/screenshots

      - name: 🤨 Store artefacts of server logs
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: server-logs
          path: ./server/data/logs
