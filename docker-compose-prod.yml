version: "3.8"

services:
  client:
      build:
        context: ./Frontend
        dockerfile: Dockerfile
      image: xccup-client
      container_name: xccup-client
      env_file: ./Frontend/.env

      restart: always
      depends_on:
        - server

      labels:
        traefik.enable: true
        traefik.http.routers.xccup.rule: "Host(`xccup.stephanschoepe.de`)"
        traefik.http.routers.xccup.entrypoints: websecure
        traefik.http.routers.xccup.tls.certresolver: myresolver
        traefik.http.routers.xccup.priority: 100
        traefik.docker.network: traefik

  server:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    image: xccup-server
    container_name: xccup-server
    restart: always
    env_file: ./Backend/.env
    environment:
      - NODE_ENV=production
    expose:
      - 65090
    depends_on:
      - db
    labels:
      traefik.enable: true
      traefik.http.routers.xccup-api.rule: "Host(`xccup.stephanschoepe.de`) && PathPrefix(`/api`)"
      traefik.http.routers.xccup-api.entrypoints: websecure
      traefik.http.routers.xccup-api.tls.certresolver: myresolver
      #traefik.port: 65090
      traefik.http.services.xccup-api.loadbalancer.server.port: 65090
      traefik.http.routers.xccup-api.priority: 200
      traefik.docker.network: traefik
    command: ./docker-entrypoint.sh

  db:
    image: postgis/postgis #odidev/postgis:13-3.1-alpine
    container_name: xccup-db
    restart: always
    env_file: .env
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_DB=$POSTGRES_DB
    volumes:
      - xccup-db:/var/lib/postgresql/data

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: db-admin
  #   restart: always
  #   env_file: .env
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=$PGADMIN_EMAIL
  #     - PGADMIN_DEFAULT_PASSWORD=$PGADMIN_PASSWORD
  #   ports:
  #     - 65080:80

volumes:
  xccup-db:

networks:
  default:
    name: traefik

